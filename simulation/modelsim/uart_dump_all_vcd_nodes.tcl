# Copyright (C) 2020  Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions 
# and other software and tools, and any partner logic 
# functions, and any output files from any of the foregoing 
# (including device programming or simulation files), and any 
# associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License 
# Subscription Agreement, the Intel Quartus Prime License Agreement,
# the Intel FPGA IP License Agreement, or other applicable license
# agreement, including, without limitation, that your use is for
# the sole purpose of programming logic devices manufactured by
# Intel and sold by Intel or its authorized distributors.  Please
# refer to the applicable agreement for further details, at
# https://fpgasoftware.intel.com/eula.


# ***************************************************************************
# ***************************************************************************
# 
# File:		D:/Quartus II/Project/Week_end/simulation/modelsim/uart_dump_all_vcd_nodes.tcl
# 
# Description:	Script for ModelSim-Altera (Verilog) VCD File Dumping
# 		This script is used to direct ModelSim-Altera (Verilog) to dump
# 		all nodes in the design to a VCD output file
# 
# Usages:	D:/Quartus II/Project/Week_end/simulation/modelsim/uart_dump_all_vcd_nodes.tcl
# 
# Generated by:	Quartus Prime
# 		Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition
# 
# Date:		Fri Sep 29 23:29:06 2023
# 
# Design:	uart
# 
# ***************************************************************************
# ***************************************************************************

# ----------------------------------------------------------------
#
proc add_vcd_signals { hierarchy vcd_filename } {
#
# Description:	This function directs ModelSim-Altera (Verilog) to print out the
#		appropriate VCD signals, with the hierarchy level
#		prepended to each signal name
#
# ----------------------------------------------------------------

   catch { vcd add "$hierarchy/tx_adp_acnt_t\[1\]" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t\[3\]" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t\[0\]" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t\[2\]" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t\[4\]" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t\[5\]" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t\[0\]" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t\[2\]" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t\[1\]" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t\[3\]" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t\[5\]" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t\[4\]" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a0_a_a6_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a0_a_a7" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a1_a_a8_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a1_a_a9" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a2_a_a12_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a2_a_a13" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a3_a_a14_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a3_a_a15" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a4_a_a16_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a4_a_a17" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a5_a_a18_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a0_a_a6_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a0_a_a7" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a1_a_a12_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a1_a_a13" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a2_a_a14_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a2_a_a15" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a3_a_a16_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a3_a_a17" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a4_a_a18_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a4_a_a19" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a5_a_a20_combout" }
   catch { vcd add "$hierarchy/rx_adp_arecv_req_aq" }
   catch { vcd add "$hierarchy/tx_adp_aTX_aq" }
   catch { vcd add "$hierarchy/tx_acu_astate_aq" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i\[3\]" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i\[0\]" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i\[2\]" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i\[1\]" }
   catch { vcd add "$hierarchy/tx_acu_aalways0_a0_combout" }
   catch { vcd add "$hierarchy/tx_adp_aEqual1_a0_combout" }
   catch { vcd add "$hierarchy/tx_adp_aEqual1_a1_combout" }
   catch { vcd add "$hierarchy/tx_acu_asend_ack_a0_combout" }
   catch { vcd add "$hierarchy/rx_acu_astate_aspecial_bit_aq" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i\[3\]" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i\[1\]" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i\[2\]" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i\[0\]" }
   catch { vcd add "$hierarchy/rx_adp_aEqual1_a0_combout" }
   catch { vcd add "$hierarchy/rx_adp_aEqual3_a2_combout" }
   catch { vcd add "$hierarchy/rx_adp_aEqual3_a3_combout" }
   catch { vcd add "$hierarchy/rx_acu_aload_bit_a0_combout" }
   catch { vcd add "$hierarchy/tx_adp_aA\[0\]" }
   catch { vcd add "$hierarchy/tx_adp_aalways0_a0_combout" }
   catch { vcd add "$hierarchy/tx_acu_aload_bit_a0_combout" }
   catch { vcd add "$hierarchy/tx_adp_aTX_a0_combout" }
   catch { vcd add "$hierarchy/tx_acu_astate_a0_combout" }
   catch { vcd add "$hierarchy/tx_adp_aAdd1_a0_combout" }
   catch { vcd add "$hierarchy/tx_acu_astate_a1_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i_a0_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i_a3_a_a1_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i_a3_a_a2_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i_a3_combout" }
   catch { vcd add "$hierarchy/tx_adp_aAdd1_a1_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i_a4_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_i_a5_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a10_combout" }
   catch { vcd add "$hierarchy/tx_adp_acnt_t_a0_a_a11_combout" }
   catch { vcd add "$hierarchy/rx_acu_astate_aidle_aq" }
   catch { vcd add "$hierarchy/rx_acu_anext_state_a3_combout" }
   catch { vcd add "$hierarchy/rx_acu_anext_state_a4_combout" }
   catch { vcd add "$hierarchy/rx_acu_anext_state_aidle_a0_combout" }
   catch { vcd add "$hierarchy/rx_acu_aalways0_a2_combout" }
   catch { vcd add "$hierarchy/rx_acu_anext_state_aspecial_bit_a0_combout" }
   catch { vcd add "$hierarchy/rx_acu_arst_t_a0_combout" }
   catch { vcd add "$hierarchy/rx_adp_aEqual2_a2_combout" }
   catch { vcd add "$hierarchy/rx_adp_aEqual2_a3_combout" }
   catch { vcd add "$hierarchy/rx_acu_arst_t_a1_combout" }
   catch { vcd add "$hierarchy/rx_acu_arst_t_a2_combout" }
   catch { vcd add "$hierarchy/rx_acu_ainc_i_a0_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i_a0_combout" }
   catch { vcd add "$hierarchy/rx_adp_aAdd1_a0_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i_a1_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i_a3_a_a2_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i_a3_a_a3_combout" }
   catch { vcd add "$hierarchy/rx_adp_aalways0_a0_combout" }
   catch { vcd add "$hierarchy/rx_acu_ainc_t_a2_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB_a1_a_a4_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i_a3_a_a4_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i_a5_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i_a6_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_i_a7_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a8_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a0_a_a9_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a0_a_a10_combout" }
   catch { vcd add "$hierarchy/rx_adp_acnt_t_a0_a_a11_combout" }
   catch { vcd add "$hierarchy/rx_adp_ad_out\[0\]" }
   catch { vcd add "$hierarchy/tx_adp_aA\[1\]" }
   catch { vcd add "$hierarchy/tx_adp_aA_a0_combout" }
   catch { vcd add "$hierarchy/rx_acu_anext_state_aidle_a1_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB\[1\]" }
   catch { vcd add "$hierarchy/rx_adp_ad_out_a0_a_a0_combout" }
   catch { vcd add "$hierarchy/rx_adp_ad_out\[1\]" }
   catch { vcd add "$hierarchy/tx_adp_aA\[2\]" }
   catch { vcd add "$hierarchy/tx_adp_aA_a1_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB\[2\]" }
   catch { vcd add "$hierarchy/rx_adp_ad_out\[2\]" }
   catch { vcd add "$hierarchy/tx_adp_aA\[3\]" }
   catch { vcd add "$hierarchy/tx_adp_aA_a2_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB\[3\]" }
   catch { vcd add "$hierarchy/rx_adp_ad_out\[3\]" }
   catch { vcd add "$hierarchy/tx_adp_aA\[4\]" }
   catch { vcd add "$hierarchy/tx_adp_aA_a3_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB\[4\]" }
   catch { vcd add "$hierarchy/rx_adp_ad_out\[4\]" }
   catch { vcd add "$hierarchy/tx_adp_aA\[5\]" }
   catch { vcd add "$hierarchy/tx_adp_aA_a4_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB\[5\]" }
   catch { vcd add "$hierarchy/rx_adp_ad_out\[5\]" }
   catch { vcd add "$hierarchy/tx_adp_aA\[6\]" }
   catch { vcd add "$hierarchy/tx_adp_aA_a5_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB\[6\]" }
   catch { vcd add "$hierarchy/rx_adp_ad_out\[6\]" }
   catch { vcd add "$hierarchy/tx_adp_aA\[7\]" }
   catch { vcd add "$hierarchy/tx_adp_aA_a6_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB\[7\]" }
   catch { vcd add "$hierarchy/rx_adp_ad_out\[7\]" }
   catch { vcd add "$hierarchy/tx_adp_aA\[8\]" }
   catch { vcd add "$hierarchy/tx_adp_aA_a7_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB\[8\]" }
   catch { vcd add "$hierarchy/tx_adp_aA_a8_a_a8_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB\[9\]" }
   catch { vcd add "$hierarchy/rx_adp_aEqual3_a4_combout" }
   catch { vcd add "$hierarchy/rx_acu_aalways0_a3_combout" }
   catch { vcd add "$hierarchy/rx_adp_aEqual2_a4_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB_a1_a_a5_combout" }
   catch { vcd add "$hierarchy/recv_req_aoutput_o" }
   catch { vcd add "$hierarchy/send_req_aoutput_o" }
   catch { vcd add "$hierarchy/TX_aoutput_o" }
   catch { vcd add "$hierarchy/send_ack_aoutput_o" }
   catch { vcd add "$hierarchy/clk_ainput_o" }
   catch { vcd add "$hierarchy/rst_n_ainput_o" }
   catch { vcd add "$hierarchy/RX_ainput_o" }
   catch { vcd add "$hierarchy/clk_ainputclkctrl_outclk" }
   catch { vcd add "$hierarchy/rx_adp_ad_out_a1_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB_a2_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_ad_out_a2_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB_a3_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_ad_out_a3_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB_a4_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_ad_out_a4_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB_a5_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_ad_out_a5_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB_a6_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_ad_out_a6_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB_a7_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_ad_out_a7_a_afeeder_combout" }
   catch { vcd add "$hierarchy/rx_adp_aB_a8_a_afeeder_combout" }
}

# ----------------------------------------------------------------
#
proc main { argv } {
#
# Description:	Main entry point to script.  Iterate over all
#		hierarchy levels specified, and direct ModelSim-Altera (Verilog)
#		to print the relevant signals under each level
#
# ----------------------------------------------------------------

   set vcd_filename "uart.vcd"
   set hierarchy "duv"

   vcd file "$vcd_filename"
   vcd on

   add_vcd_signals $hierarchy $vcd_filename
}

main $argv
