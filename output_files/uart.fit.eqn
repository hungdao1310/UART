-- Copyright (C) 1991-2013 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--H1_cnt_t[8] is uart_tx:tx|datapath:dp|cnt_t[8] at FF_X112_Y40_N21
--register power-up is low

H1_cnt_t[8] = DFFEAS(H1L65, GLOBAL(A1L8),  ,  , H1L42,  ,  , H1L67,  );


--H1_cnt_t[1] is uart_tx:tx|datapath:dp|cnt_t[1] at FF_X112_Y40_N7
--register power-up is low

H1_cnt_t[1] = DFFEAS(H1L44, GLOBAL(A1L8),  ,  , H1L42,  ,  , H1L67,  );


--H1_cnt_t[2] is uart_tx:tx|datapath:dp|cnt_t[2] at FF_X112_Y40_N9
--register power-up is low

H1_cnt_t[2] = DFFEAS(H1L47, GLOBAL(A1L8),  ,  , H1L42,  ,  , H1L67,  );


--H1_cnt_t[3] is uart_tx:tx|datapath:dp|cnt_t[3] at FF_X112_Y40_N11
--register power-up is low

H1_cnt_t[3] = DFFEAS(H1L50, GLOBAL(A1L8),  ,  , H1L42,  ,  , H1L67,  );


--H1_cnt_t[0] is uart_tx:tx|datapath:dp|cnt_t[0] at FF_X112_Y40_N5
--register power-up is low

H1_cnt_t[0] = DFFEAS(H1L40, GLOBAL(A1L8),  ,  , H1L42,  ,  , H1L67,  );


--H1_cnt_t[6] is uart_tx:tx|datapath:dp|cnt_t[6] at FF_X112_Y40_N17
--register power-up is low

H1_cnt_t[6] = DFFEAS(H1L59, GLOBAL(A1L8),  ,  , H1L42,  ,  , H1L67,  );


--H1_cnt_t[4] is uart_tx:tx|datapath:dp|cnt_t[4] at FF_X112_Y40_N13
--register power-up is low

H1_cnt_t[4] = DFFEAS(H1L53, GLOBAL(A1L8),  ,  , H1L42,  ,  , H1L67,  );


--H1_cnt_t[5] is uart_tx:tx|datapath:dp|cnt_t[5] at FF_X112_Y40_N15
--register power-up is low

H1_cnt_t[5] = DFFEAS(H1L56, GLOBAL(A1L8),  ,  , H1L42,  ,  , H1L67,  );


--H1_cnt_t[7] is uart_tx:tx|datapath:dp|cnt_t[7] at FF_X112_Y40_N19
--register power-up is low

H1_cnt_t[7] = DFFEAS(H1L62, GLOBAL(A1L8),  ,  , H1L42,  ,  , H1L67,  );


--F1_cnt_t[4] is uart_rx:rx|datapath1:dp|cnt_t[4] at FF_X113_Y41_N19
--register power-up is low

F1_cnt_t[4] = DFFEAS(F1L53, GLOBAL(A1L8),  ,  , F1L42,  ,  , F1L67,  );


--F1_cnt_t[7] is uart_rx:rx|datapath1:dp|cnt_t[7] at FF_X113_Y41_N25
--register power-up is low

F1_cnt_t[7] = DFFEAS(F1L62, GLOBAL(A1L8),  ,  , F1L42,  ,  , F1L67,  );


--F1_cnt_t[1] is uart_rx:rx|datapath1:dp|cnt_t[1] at FF_X113_Y41_N13
--register power-up is low

F1_cnt_t[1] = DFFEAS(F1L44, GLOBAL(A1L8),  ,  , F1L42,  ,  , F1L67,  );


--F1_cnt_t[2] is uart_rx:rx|datapath1:dp|cnt_t[2] at FF_X113_Y41_N15
--register power-up is low

F1_cnt_t[2] = DFFEAS(F1L47, GLOBAL(A1L8),  ,  , F1L42,  ,  , F1L67,  );


--F1_cnt_t[3] is uart_rx:rx|datapath1:dp|cnt_t[3] at FF_X113_Y41_N17
--register power-up is low

F1_cnt_t[3] = DFFEAS(F1L50, GLOBAL(A1L8),  ,  , F1L42,  ,  , F1L67,  );


--F1_cnt_t[6] is uart_rx:rx|datapath1:dp|cnt_t[6] at FF_X113_Y41_N23
--register power-up is low

F1_cnt_t[6] = DFFEAS(F1L59, GLOBAL(A1L8),  ,  , F1L42,  ,  , F1L67,  );


--F1_cnt_t[0] is uart_rx:rx|datapath1:dp|cnt_t[0] at FF_X113_Y41_N11
--register power-up is low

F1_cnt_t[0] = DFFEAS(F1L39, GLOBAL(A1L8),  ,  , F1L42,  ,  , F1L67,  );


--F1_cnt_t[5] is uart_rx:rx|datapath1:dp|cnt_t[5] at FF_X113_Y41_N21
--register power-up is low

F1_cnt_t[5] = DFFEAS(F1L56, GLOBAL(A1L8),  ,  , F1L42,  ,  , F1L67,  );


--F1_cnt_t[8] is uart_rx:rx|datapath1:dp|cnt_t[8] at FF_X113_Y41_N27
--register power-up is low

F1_cnt_t[8] = DFFEAS(F1L65, GLOBAL(A1L8),  ,  , F1L42,  ,  , F1L67,  );


--H1L40 is uart_tx:tx|datapath:dp|cnt_t[0]~9 at LCCOMB_X112_Y40_N4
H1L40 = H1_cnt_t[0] $ (VCC);

--H1L41 is uart_tx:tx|datapath:dp|cnt_t[0]~10 at LCCOMB_X112_Y40_N4
H1L41 = CARRY(H1_cnt_t[0]);


--H1L44 is uart_tx:tx|datapath:dp|cnt_t[1]~11 at LCCOMB_X112_Y40_N6
H1L44 = (H1_cnt_t[1] & (!H1L41)) # (!H1_cnt_t[1] & ((H1L41) # (GND)));

--H1L45 is uart_tx:tx|datapath:dp|cnt_t[1]~12 at LCCOMB_X112_Y40_N6
H1L45 = CARRY((!H1L41) # (!H1_cnt_t[1]));


--H1L47 is uart_tx:tx|datapath:dp|cnt_t[2]~13 at LCCOMB_X112_Y40_N8
H1L47 = (H1_cnt_t[2] & (H1L45 $ (GND))) # (!H1_cnt_t[2] & (!H1L45 & VCC));

--H1L48 is uart_tx:tx|datapath:dp|cnt_t[2]~14 at LCCOMB_X112_Y40_N8
H1L48 = CARRY((H1_cnt_t[2] & !H1L45));


--H1L50 is uart_tx:tx|datapath:dp|cnt_t[3]~15 at LCCOMB_X112_Y40_N10
H1L50 = (H1_cnt_t[3] & (!H1L48)) # (!H1_cnt_t[3] & ((H1L48) # (GND)));

--H1L51 is uart_tx:tx|datapath:dp|cnt_t[3]~16 at LCCOMB_X112_Y40_N10
H1L51 = CARRY((!H1L48) # (!H1_cnt_t[3]));


--H1L53 is uart_tx:tx|datapath:dp|cnt_t[4]~17 at LCCOMB_X112_Y40_N12
H1L53 = (H1_cnt_t[4] & (H1L51 $ (GND))) # (!H1_cnt_t[4] & (!H1L51 & VCC));

--H1L54 is uart_tx:tx|datapath:dp|cnt_t[4]~18 at LCCOMB_X112_Y40_N12
H1L54 = CARRY((H1_cnt_t[4] & !H1L51));


--H1L56 is uart_tx:tx|datapath:dp|cnt_t[5]~19 at LCCOMB_X112_Y40_N14
H1L56 = (H1_cnt_t[5] & (!H1L54)) # (!H1_cnt_t[5] & ((H1L54) # (GND)));

--H1L57 is uart_tx:tx|datapath:dp|cnt_t[5]~20 at LCCOMB_X112_Y40_N14
H1L57 = CARRY((!H1L54) # (!H1_cnt_t[5]));


--H1L59 is uart_tx:tx|datapath:dp|cnt_t[6]~21 at LCCOMB_X112_Y40_N16
H1L59 = (H1_cnt_t[6] & (H1L57 $ (GND))) # (!H1_cnt_t[6] & (!H1L57 & VCC));

--H1L60 is uart_tx:tx|datapath:dp|cnt_t[6]~22 at LCCOMB_X112_Y40_N16
H1L60 = CARRY((H1_cnt_t[6] & !H1L57));


--H1L62 is uart_tx:tx|datapath:dp|cnt_t[7]~23 at LCCOMB_X112_Y40_N18
H1L62 = (H1_cnt_t[7] & (!H1L60)) # (!H1_cnt_t[7] & ((H1L60) # (GND)));

--H1L63 is uart_tx:tx|datapath:dp|cnt_t[7]~24 at LCCOMB_X112_Y40_N18
H1L63 = CARRY((!H1L60) # (!H1_cnt_t[7]));


--H1L65 is uart_tx:tx|datapath:dp|cnt_t[8]~25 at LCCOMB_X112_Y40_N20
H1L65 = H1L63 $ (!H1_cnt_t[8]);


--F1L39 is uart_rx:rx|datapath1:dp|cnt_t[0]~9 at LCCOMB_X113_Y41_N10
F1L39 = F1_cnt_t[0] $ (VCC);

--F1L40 is uart_rx:rx|datapath1:dp|cnt_t[0]~10 at LCCOMB_X113_Y41_N10
F1L40 = CARRY(F1_cnt_t[0]);


--F1L44 is uart_rx:rx|datapath1:dp|cnt_t[1]~11 at LCCOMB_X113_Y41_N12
F1L44 = (F1_cnt_t[1] & (!F1L40)) # (!F1_cnt_t[1] & ((F1L40) # (GND)));

--F1L45 is uart_rx:rx|datapath1:dp|cnt_t[1]~12 at LCCOMB_X113_Y41_N12
F1L45 = CARRY((!F1L40) # (!F1_cnt_t[1]));


--F1L47 is uart_rx:rx|datapath1:dp|cnt_t[2]~13 at LCCOMB_X113_Y41_N14
F1L47 = (F1_cnt_t[2] & (F1L45 $ (GND))) # (!F1_cnt_t[2] & (!F1L45 & VCC));

--F1L48 is uart_rx:rx|datapath1:dp|cnt_t[2]~14 at LCCOMB_X113_Y41_N14
F1L48 = CARRY((F1_cnt_t[2] & !F1L45));


--F1L50 is uart_rx:rx|datapath1:dp|cnt_t[3]~15 at LCCOMB_X113_Y41_N16
F1L50 = (F1_cnt_t[3] & (!F1L48)) # (!F1_cnt_t[3] & ((F1L48) # (GND)));

--F1L51 is uart_rx:rx|datapath1:dp|cnt_t[3]~16 at LCCOMB_X113_Y41_N16
F1L51 = CARRY((!F1L48) # (!F1_cnt_t[3]));


--F1L53 is uart_rx:rx|datapath1:dp|cnt_t[4]~17 at LCCOMB_X113_Y41_N18
F1L53 = (F1_cnt_t[4] & (F1L51 $ (GND))) # (!F1_cnt_t[4] & (!F1L51 & VCC));

--F1L54 is uart_rx:rx|datapath1:dp|cnt_t[4]~18 at LCCOMB_X113_Y41_N18
F1L54 = CARRY((F1_cnt_t[4] & !F1L51));


--F1L56 is uart_rx:rx|datapath1:dp|cnt_t[5]~23 at LCCOMB_X113_Y41_N20
F1L56 = (F1_cnt_t[5] & (!F1L54)) # (!F1_cnt_t[5] & ((F1L54) # (GND)));

--F1L57 is uart_rx:rx|datapath1:dp|cnt_t[5]~24 at LCCOMB_X113_Y41_N20
F1L57 = CARRY((!F1L54) # (!F1_cnt_t[5]));


--F1L59 is uart_rx:rx|datapath1:dp|cnt_t[6]~25 at LCCOMB_X113_Y41_N22
F1L59 = (F1_cnt_t[6] & (F1L57 $ (GND))) # (!F1_cnt_t[6] & (!F1L57 & VCC));

--F1L60 is uart_rx:rx|datapath1:dp|cnt_t[6]~26 at LCCOMB_X113_Y41_N22
F1L60 = CARRY((F1_cnt_t[6] & !F1L57));


--F1L62 is uart_rx:rx|datapath1:dp|cnt_t[7]~27 at LCCOMB_X113_Y41_N24
F1L62 = (F1_cnt_t[7] & (!F1L60)) # (!F1_cnt_t[7] & ((F1L60) # (GND)));

--F1L63 is uart_rx:rx|datapath1:dp|cnt_t[7]~28 at LCCOMB_X113_Y41_N24
F1L63 = CARRY((!F1L60) # (!F1_cnt_t[7]));


--F1L65 is uart_rx:rx|datapath1:dp|cnt_t[8]~29 at LCCOMB_X113_Y41_N26
F1L65 = F1L63 $ (!F1_cnt_t[8]);


--F1_recv_req is uart_rx:rx|datapath1:dp|recv_req at FF_X112_Y41_N29
--register power-up is low

F1_recv_req = DFFEAS(F1L88, GLOBAL(A1L8),  ,  , A1L12,  ,  ,  ,  );


--H1_TX is uart_tx:tx|datapath:dp|TX at FF_X111_Y40_N1
--register power-up is low

H1_TX = DFFEAS(H1L26, GLOBAL(A1L8),  ,  , H1L27,  ,  ,  ,  );


--G1_state is uart_tx:tx|control:cu|state at FF_X113_Y40_N25
--register power-up is low

G1_state = DFFEAS(G1L4, GLOBAL(A1L8), A1L12,  ,  ,  ,  ,  ,  );


--H1_cnt_i[3] is uart_tx:tx|datapath:dp|cnt_i[3] at FF_X111_Y40_N23
--register power-up is low

H1_cnt_i[3] = DFFEAS(H1L34, GLOBAL(A1L8),  ,  , H1L27,  ,  ,  ,  );


--H1_cnt_i[0] is uart_tx:tx|datapath:dp|cnt_i[0] at FF_X111_Y40_N9
--register power-up is low

H1_cnt_i[0] = DFFEAS(H1L35, GLOBAL(A1L8),  ,  , H1L27,  ,  ,  ,  );


--H1_cnt_i[2] is uart_tx:tx|datapath:dp|cnt_i[2] at FF_X111_Y40_N19
--register power-up is low

H1_cnt_i[2] = DFFEAS(H1L36, GLOBAL(A1L8),  ,  , H1L27,  ,  ,  ,  );


--H1_cnt_i[1] is uart_tx:tx|datapath:dp|cnt_i[1] at FF_X111_Y40_N25
--register power-up is low

H1_cnt_i[1] = DFFEAS(H1L37, GLOBAL(A1L8),  ,  , H1L27,  ,  ,  ,  );


--H1L22 is uart_tx:tx|datapath:dp|Equal0~0 at LCCOMB_X111_Y40_N6
H1L22 = (H1_cnt_i[3] & (!H1_cnt_i[2] & (H1_cnt_i[0] & !H1_cnt_i[1])));


--H1L23 is uart_tx:tx|datapath:dp|Equal1~0 at LCCOMB_X112_Y40_N24
H1L23 = (H1_cnt_t[1]) # ((H1_cnt_t[2]) # ((H1_cnt_t[3]) # (!H1_cnt_t[0])));


--H1L24 is uart_tx:tx|datapath:dp|Equal1~1 at LCCOMB_X112_Y40_N26
H1L24 = ((H1_cnt_t[6]) # ((!H1_cnt_t[7]) # (!H1_cnt_t[5]))) # (!H1_cnt_t[4]);


--G1L2 is uart_tx:tx|control:cu|load_bit~0 at LCCOMB_X112_Y40_N22
G1L2 = (!H1L24 & (H1_cnt_t[8] & (H1L22 & !H1L23)));


--G1L5 is uart_tx:tx|control:cu|send_ack~0 at LCCOMB_X113_Y40_N2
G1L5 = (G1L2 & G1_state);


--E1_state.special_bit is uart_rx:rx|control1:cu|state.special_bit at FF_X112_Y41_N3
--register power-up is low

E1_state.special_bit = DFFEAS(E1L10, GLOBAL(A1L8), A1L12,  ,  ,  ,  ,  ,  );


--F1L22 is uart_rx:rx|datapath1:dp|Equal2~0 at LCCOMB_X113_Y41_N28
F1L22 = (!F1_cnt_t[1] & (F1_cnt_t[7] & (!F1_cnt_t[2] & F1_cnt_t[4])));


--E1L1 is uart_rx:rx|control1:cu|inc_i~0 at LCCOMB_X113_Y41_N30
E1L1 = (!F1_cnt_t[0] & (!F1_cnt_t[5] & (F1_cnt_t[6] & F1_cnt_t[3])));


--E1L2 is uart_rx:rx|control1:cu|inc_i~1 at LCCOMB_X113_Y41_N4
E1L2 = (!F1_cnt_t[8] & (E1L1 & F1L22));


--F1_cnt_i[3] is uart_rx:rx|datapath1:dp|cnt_i[3] at FF_X111_Y41_N31
--register power-up is low

F1_cnt_i[3] = DFFEAS(F1L32, GLOBAL(A1L8),  ,  , F1L31,  ,  ,  ,  );


--F1_cnt_i[1] is uart_rx:rx|datapath1:dp|cnt_i[1] at FF_X111_Y41_N27
--register power-up is low

F1_cnt_i[1] = DFFEAS(F1L34, GLOBAL(A1L8),  ,  , F1L31,  ,  ,  ,  );


--F1_cnt_i[2] is uart_rx:rx|datapath1:dp|cnt_i[2] at FF_X111_Y41_N7
--register power-up is low

F1_cnt_i[2] = DFFEAS(F1L35, GLOBAL(A1L8),  ,  , F1L31,  ,  ,  ,  );


--F1_cnt_i[0] is uart_rx:rx|datapath1:dp|cnt_i[0] at FF_X111_Y41_N17
--register power-up is low

F1_cnt_i[0] = DFFEAS(F1L36, GLOBAL(A1L8),  ,  , F1L31,  ,  ,  ,  );


--F1L21 is uart_rx:rx|datapath1:dp|Equal1~0 at LCCOMB_X112_Y41_N4
F1L21 = (F1_cnt_i[1] & (!F1_cnt_i[2] & (!F1_cnt_i[0] & F1_cnt_i[3])));


--E1L6 is uart_rx:rx|control1:cu|load_bit~0 at LCCOMB_X112_Y41_N18
E1L6 = (E1_state.special_bit & (F1L21 & E1L2));


--H1_A[0] is uart_tx:tx|datapath:dp|A[0] at FF_X113_Y40_N21
--register power-up is low

H1_A[0] = DFFEAS(H1L14, GLOBAL(A1L8), A1L12,  , H1L11,  ,  ,  ,  );


--H1L26 is uart_tx:tx|datapath:dp|TX~0 at LCCOMB_X111_Y40_N0
H1L26 = (H1_A[0] & (((!G1L2 & G1_state)) # (!F1_recv_req)));


--G1L1 is uart_tx:tx|control:cu|always0~0 at LCCOMB_X112_Y40_N28
G1L1 = (!H1L24 & (H1_cnt_t[8] & (!H1L22 & !H1L23)));


--H1L11 is uart_tx:tx|datapath:dp|A[8]~0 at LCCOMB_X112_Y40_N2
H1L11 = (G1_state & ((G1L1) # ((F1_recv_req & G1L2)))) # (!G1_state & (F1_recv_req));


--H1L27 is uart_tx:tx|datapath:dp|TX~1 at LCCOMB_X111_Y40_N20
H1L27 = (A1L12 & H1L11);


--G1L4 is uart_tx:tx|control:cu|next_state~0 at LCCOMB_X113_Y40_N24
G1L4 = (F1_recv_req) # ((G1_state & !G1L2));


--H1L28 is uart_tx:tx|datapath:dp|TX~2 at LCCOMB_X111_Y40_N26
H1L28 = ((G1_state & !G1L2)) # (!F1_recv_req);


--H1L13 is uart_tx:tx|datapath:dp|Add1~0 at LCCOMB_X111_Y40_N28
H1L13 = (H1_cnt_i[0] & H1_cnt_i[1]);


--H1L34 is uart_tx:tx|datapath:dp|cnt_i~0 at LCCOMB_X111_Y40_N22
H1L34 = (H1L28 & (H1_cnt_i[3] $ (((H1L13 & H1_cnt_i[2])))));


--H1L35 is uart_tx:tx|datapath:dp|cnt_i~1 at LCCOMB_X111_Y40_N8
H1L35 = (!H1_cnt_i[0] & (((G1_state & !G1L2)) # (!F1_recv_req)));


--H1L36 is uart_tx:tx|datapath:dp|cnt_i~2 at LCCOMB_X111_Y40_N18
H1L36 = (G1_state & (H1L13 $ ((H1_cnt_i[2])))) # (!G1_state & (!F1_recv_req & (H1L13 $ (H1_cnt_i[2]))));


--H1L37 is uart_tx:tx|datapath:dp|cnt_i~3 at LCCOMB_X111_Y40_N24
H1L37 = (H1L28 & (H1_cnt_i[0] $ (H1_cnt_i[1])));


--H1L67 is uart_tx:tx|datapath:dp|cnt_t~27 at LCCOMB_X112_Y40_N0
H1L67 = ((!H1L24 & (H1_cnt_t[8] & !H1L23))) # (!G1_state);


--H1L42 is uart_tx:tx|datapath:dp|cnt_t[0]~28 at LCCOMB_X112_Y40_N30
H1L42 = (A1L12 & ((F1_recv_req) # ((!G1L2 & G1_state))));


--E1_state.idle is uart_rx:rx|control1:cu|state.idle at FF_X112_Y41_N25
--register power-up is low

E1_state.idle = DFFEAS(E1L16, GLOBAL(A1L8), A1L12,  ,  ,  ,  ,  ,  );


--E1L7 is uart_rx:rx|control1:cu|next_state.idle~0 at LCCOMB_X112_Y41_N30
E1L7 = (!E1_state.special_bit & ((E1_state.idle & (!F1L21)) # (!E1_state.idle & ((A1L2)))));


--E1L3 is uart_rx:rx|control1:cu|inc_i~2 at LCCOMB_X111_Y41_N2
E1L3 = (!F1_cnt_i[3] & (!F1_cnt_i[0] & (!F1_cnt_i[1] & !F1_cnt_i[2])));


--E1L8 is uart_rx:rx|control1:cu|next_state.idle~1 at LCCOMB_X112_Y41_N12
E1L8 = ((F1L21 & ((!A1L2))) # (!F1L21 & (!E1L3))) # (!E1L2);


--E1L10 is uart_rx:rx|control1:cu|next_state.special_bit~0 at LCCOMB_X112_Y41_N2
E1L10 = (E1L7 & (E1_state.special_bit)) # (!E1L7 & ((E1L8) # (!E1_state.special_bit)));


--F1L23 is uart_rx:rx|datapath1:dp|Equal2~1 at LCCOMB_X113_Y41_N6
F1L23 = (F1_cnt_t[6]) # ((F1_cnt_t[3]) # ((!F1_cnt_t[0]) # (!F1_cnt_t[5])));


--F1L24 is uart_rx:rx|datapath1:dp|Equal2~2 at LCCOMB_X113_Y41_N0
F1L24 = (F1L23) # ((!F1L22) # (!F1_cnt_t[8]));


--E1L5 is uart_rx:rx|control1:cu|inc_t~0 at LCCOMB_X113_Y41_N8
E1L5 = (E1_state.special_bit & (!E1L2)) # (!E1_state.special_bit & ((F1L24)));


--F1L67 is uart_rx:rx|datapath1:dp|cnt_t~19 at LCCOMB_X112_Y41_N26
F1L67 = ((E1L6) # (!E1L5)) # (!E1_state.idle);


--F1L41 is uart_rx:rx|datapath1:dp|cnt_t[0]~20 at LCCOMB_X112_Y41_N16
F1L41 = (A1L12 & (((E1_state.idle & !E1L6)) # (!A1L2)));


--E1L11 is uart_rx:rx|control1:cu|rst_t~0 at LCCOMB_X112_Y41_N22
E1L11 = (A1L2 & (E1_state.special_bit & ((E1L3)))) # (!A1L2 & ((F1L21) # ((E1_state.special_bit & E1L3))));


--E1L12 is uart_rx:rx|control1:cu|rst_t~1 at LCCOMB_X112_Y41_N8
E1L12 = (F1L21) # ((F1_cnt_t[8] & (F1L22 & !F1L23)));


--E1L13 is uart_rx:rx|control1:cu|rst_t~2 at LCCOMB_X112_Y41_N6
E1L13 = (E1L11 & ((E1L2) # ((!E1_state.special_bit & E1L12)))) # (!E1L11 & (!E1_state.special_bit & (E1L12)));


--E1L14 is uart_rx:rx|control1:cu|rst_t~3 at LCCOMB_X112_Y41_N20
E1L14 = (E1_state.idle & ((E1L13))) # (!E1_state.idle & (!A1L2));


--F1L68 is uart_rx:rx|datapath1:dp|cnt_t~21 at LCCOMB_X112_Y41_N10
F1L68 = (E1_state.idle & (((!E1L2) # (!F1L21)) # (!E1_state.special_bit)));


--F1L42 is uart_rx:rx|datapath1:dp|cnt_t[0]~22 at LCCOMB_X113_Y41_N2
F1L42 = (F1L41 & (((E1L5) # (E1L14)) # (!F1L68)));


--E1L4 is uart_rx:rx|control1:cu|inc_i~3 at LCCOMB_X111_Y41_N18
E1L4 = (E1_state.special_bit & (E1L3 & (E1L2))) # (!E1_state.special_bit & (((!F1L24))));


--F1L1 is uart_rx:rx|datapath1:dp|Add1~0 at LCCOMB_X112_Y41_N0
F1L1 = F1_cnt_i[3] $ (((F1_cnt_i[1] & (F1_cnt_i[2] & F1_cnt_i[0]))));


--F1L32 is uart_rx:rx|datapath1:dp|cnt_i~0 at LCCOMB_X111_Y41_N30
F1L32 = (E1L13 & (F1L1 & (F1L68 & E1L4)));


--F1L4 is uart_rx:rx|datapath1:dp|B[1]~0 at LCCOMB_X111_Y41_N10
F1L4 = (!E1L5 & (E1L4 & (F1L68 & E1L13)));


--F1L30 is uart_rx:rx|datapath1:dp|cnt_i[3]~1 at LCCOMB_X111_Y41_N8
F1L30 = (!A1L2 & ((E1L6) # (!E1_state.idle)));


--F1L31 is uart_rx:rx|datapath1:dp|cnt_i[3]~2 at LCCOMB_X111_Y41_N4
F1L31 = (A1L12 & ((F1L4) # ((F1L30 & E1L14))));


--F1L33 is uart_rx:rx|datapath1:dp|cnt_i~3 at LCCOMB_X111_Y41_N28
F1L33 = (E1L13 & (E1L4 & (E1_state.idle & !E1L6)));


--F1L34 is uart_rx:rx|datapath1:dp|cnt_i~4 at LCCOMB_X111_Y41_N26
F1L34 = (F1L33 & (F1_cnt_i[0] $ (F1_cnt_i[1])));


--F1L35 is uart_rx:rx|datapath1:dp|cnt_i~5 at LCCOMB_X111_Y41_N6
F1L35 = (F1L33 & (F1_cnt_i[2] $ (((F1_cnt_i[1] & F1_cnt_i[0])))));


--F1L36 is uart_rx:rx|datapath1:dp|cnt_i~6 at LCCOMB_X111_Y41_N16
F1L36 = (E1L13 & (F1L68 & (!F1_cnt_i[0] & E1L4)));


--F1_d_out[0] is uart_rx:rx|datapath1:dp|d_out[0] at FF_X114_Y41_N29
--register power-up is low

F1_d_out[0] = DFFEAS(F1L72, GLOBAL(A1L8),  ,  , F1L71,  ,  ,  ,  );


--H1_A[1] is uart_tx:tx|datapath:dp|A[1] at FF_X113_Y40_N15
--register power-up is low

H1_A[1] = DFFEAS(H1L15, GLOBAL(A1L8), A1L12,  , H1L11,  ,  ,  ,  );


--G1L3 is uart_tx:tx|control:cu|load_bit~1 at LCCOMB_X113_Y40_N28
G1L3 = (F1_recv_req & ((G1L2) # (!G1_state)));


--H1L14 is uart_tx:tx|datapath:dp|A~1 at LCCOMB_X113_Y40_N20
H1L14 = (G1L3 & (F1_d_out[0])) # (!G1L3 & ((H1_A[1])));


--E1L9 is uart_rx:rx|control1:cu|next_state.idle~2 at LCCOMB_X112_Y41_N14
E1L9 = (E1L7) # ((E1_state.special_bit & E1L8));


--E1L16 is uart_rx:rx|control1:cu|state.idle~0 at LCCOMB_X112_Y41_N24
E1L16 = (E1L9 & (((E1_state.idle)))) # (!E1L9 & (((!E1L6)) # (!A1L2)));


--F1_B[1] is uart_rx:rx|datapath1:dp|B[1] at FF_X110_Y41_N1
--register power-up is low

F1_B[1] = DFFEAS(F1L5, GLOBAL(A1L8), A1L12,  , F1L4,  ,  ,  ,  );


--F1L71 is uart_rx:rx|datapath1:dp|d_out[0]~0 at LCCOMB_X114_Y41_N14
F1L71 = (A1L12 & (E1_state.special_bit & (E1L2 & F1L21)));


--F1_d_out[1] is uart_rx:rx|datapath1:dp|d_out[1] at FF_X114_Y41_N17
--register power-up is low

F1_d_out[1] = DFFEAS(F1L74, GLOBAL(A1L8),  ,  , F1L71,  ,  ,  ,  );


--H1_A[2] is uart_tx:tx|datapath:dp|A[2] at FF_X113_Y40_N19
--register power-up is low

H1_A[2] = DFFEAS(H1L16, GLOBAL(A1L8), A1L12,  , H1L11,  ,  ,  ,  );


--H1L15 is uart_tx:tx|datapath:dp|A~2 at LCCOMB_X113_Y40_N14
H1L15 = (G1L3 & (F1_d_out[1])) # (!G1L3 & ((H1_A[2])));


--F1_B[2] is uart_rx:rx|datapath1:dp|B[2] at FF_X110_Y41_N3
--register power-up is low

F1_B[2] = DFFEAS(F1L7, GLOBAL(A1L8), A1L12,  , F1L4,  ,  ,  ,  );


--F1_d_out[2] is uart_rx:rx|datapath1:dp|d_out[2] at FF_X114_Y41_N31
--register power-up is low

F1_d_out[2] = DFFEAS(F1L76, GLOBAL(A1L8),  ,  , F1L71,  ,  ,  ,  );


--H1_A[3] is uart_tx:tx|datapath:dp|A[3] at FF_X113_Y40_N1
--register power-up is low

H1_A[3] = DFFEAS(H1L17, GLOBAL(A1L8), A1L12,  , H1L11,  ,  ,  ,  );


--H1L16 is uart_tx:tx|datapath:dp|A~3 at LCCOMB_X113_Y40_N18
H1L16 = (G1L3 & ((F1_d_out[2]))) # (!G1L3 & (H1_A[3]));


--F1_B[3] is uart_rx:rx|datapath1:dp|B[3] at FF_X111_Y41_N9
--register power-up is low

F1_B[3] = DFFEAS( , GLOBAL(A1L8), A1L12,  , F1L4, F1_B[4],  ,  , VCC);


--F1_d_out[3] is uart_rx:rx|datapath1:dp|d_out[3] at FF_X114_Y41_N9
--register power-up is low

F1_d_out[3] = DFFEAS(F1L78, GLOBAL(A1L8),  ,  , F1L71,  ,  ,  ,  );


--H1_A[4] is uart_tx:tx|datapath:dp|A[4] at FF_X113_Y40_N11
--register power-up is low

H1_A[4] = DFFEAS(H1L18, GLOBAL(A1L8), A1L12,  , H1L11,  ,  ,  ,  );


--H1L17 is uart_tx:tx|datapath:dp|A~4 at LCCOMB_X113_Y40_N0
H1L17 = (G1L3 & ((F1_d_out[3]))) # (!G1L3 & (H1_A[4]));


--F1_B[4] is uart_rx:rx|datapath1:dp|B[4] at FF_X111_Y41_N15
--register power-up is low

F1_B[4] = DFFEAS(F1L10, GLOBAL(A1L8), A1L12,  , F1L4,  ,  ,  ,  );


--F1_d_out[4] is uart_rx:rx|datapath1:dp|d_out[4] at FF_X114_Y41_N11
--register power-up is low

F1_d_out[4] = DFFEAS(F1L80, GLOBAL(A1L8),  ,  , F1L71,  ,  ,  ,  );


--H1_A[5] is uart_tx:tx|datapath:dp|A[5] at FF_X113_Y40_N13
--register power-up is low

H1_A[5] = DFFEAS(H1L19, GLOBAL(A1L8), A1L12,  , H1L11,  ,  ,  ,  );


--H1L18 is uart_tx:tx|datapath:dp|A~5 at LCCOMB_X113_Y40_N10
H1L18 = (G1L3 & ((F1_d_out[4]))) # (!G1L3 & (H1_A[5]));


--F1_B[5] is uart_rx:rx|datapath1:dp|B[5] at FF_X111_Y41_N23
--register power-up is low

F1_B[5] = DFFEAS(F1L12, GLOBAL(A1L8), A1L12,  , F1L4,  ,  ,  ,  );


--F1_d_out[5] is uart_rx:rx|datapath1:dp|d_out[5] at FF_X114_Y41_N5
--register power-up is low

F1_d_out[5] = DFFEAS(F1L82, GLOBAL(A1L8),  ,  , F1L71,  ,  ,  ,  );


--H1_A[6] is uart_tx:tx|datapath:dp|A[6] at FF_X113_Y40_N23
--register power-up is low

H1_A[6] = DFFEAS(H1L20, GLOBAL(A1L8), A1L12,  , H1L11,  ,  ,  ,  );


--H1L19 is uart_tx:tx|datapath:dp|A~6 at LCCOMB_X113_Y40_N12
H1L19 = (G1L3 & (F1_d_out[5])) # (!G1L3 & ((H1_A[6])));


--F1_B[6] is uart_rx:rx|datapath1:dp|B[6] at FF_X111_Y41_N1
--register power-up is low

F1_B[6] = DFFEAS(F1L14, GLOBAL(A1L8), A1L12,  , F1L4,  ,  ,  ,  );


--F1_d_out[6] is uart_rx:rx|datapath1:dp|d_out[6] at FF_X114_Y41_N23
--register power-up is low

F1_d_out[6] = DFFEAS(F1L84, GLOBAL(A1L8),  ,  , F1L71,  ,  ,  ,  );


--H1_A[7] is uart_tx:tx|datapath:dp|A[7] at FF_X113_Y40_N17
--register power-up is low

H1_A[7] = DFFEAS(H1L21, GLOBAL(A1L8), A1L12,  , H1L11,  ,  ,  ,  );


--H1L20 is uart_tx:tx|datapath:dp|A~7 at LCCOMB_X113_Y40_N22
H1L20 = (G1L3 & (F1_d_out[6])) # (!G1L3 & ((H1_A[7])));


--F1_B[7] is uart_rx:rx|datapath1:dp|B[7] at FF_X111_Y41_N21
--register power-up is low

F1_B[7] = DFFEAS(F1L16, GLOBAL(A1L8), A1L12,  , F1L4,  ,  ,  ,  );


--F1_d_out[7] is uart_rx:rx|datapath1:dp|d_out[7] at FF_X114_Y41_N21
--register power-up is low

F1_d_out[7] = DFFEAS(F1L86, GLOBAL(A1L8),  ,  , F1L71,  ,  ,  ,  );


--H1_A[8] is uart_tx:tx|datapath:dp|A[8] at FF_X113_Y40_N27
--register power-up is low

H1_A[8] = DFFEAS(H1L12, GLOBAL(A1L8), A1L12,  ,  ,  ,  ,  ,  );


--H1L21 is uart_tx:tx|datapath:dp|A~8 at LCCOMB_X113_Y40_N16
H1L21 = (G1L3 & (F1_d_out[7])) # (!G1L3 & ((H1_A[8])));


--F1_B[8] is uart_rx:rx|datapath1:dp|B[8] at FF_X111_Y41_N25
--register power-up is low

F1_B[8] = DFFEAS(F1L18, GLOBAL(A1L8), A1L12,  , F1L4,  ,  ,  ,  );


--H1L12 is uart_tx:tx|datapath:dp|A[8]~9 at LCCOMB_X113_Y40_N26
H1L12 = (H1_A[8]) # (H1L11);


--F1_B[9] is uart_rx:rx|datapath1:dp|B[9] at FF_X111_Y41_N13
--register power-up is low

F1_B[9] = DFFEAS(F1L20, GLOBAL(A1L8), A1L12,  , F1L4,  ,  ,  ,  );


--A1L10 is recv_req~output at IOOBUF_X115_Y41_N2
A1L10 = OUTPUT_BUFFER.O(.I(F1_recv_req), , , , , , , , , , , , , , , , , );


--recv_req is recv_req at PIN_M24
recv_req = OUTPUT();


--A1L16 is send_req~output at IOOBUF_X115_Y41_N9
A1L16 = OUTPUT_BUFFER.O(.I(F1_recv_req), , , , , , , , , , , , , , , , , );


--send_req is send_req at PIN_P25
send_req = OUTPUT();


--A1L4 is TX~output at IOOBUF_X13_Y73_N23
A1L4 = OUTPUT_BUFFER.O(.I(H1_TX), , , , , , , , , , , , , , , , , );


--TX is TX at PIN_G9
TX = OUTPUT();


--A1L14 is send_ack~output at IOOBUF_X115_Y40_N2
A1L14 = OUTPUT_BUFFER.O(.I(G1L5), , , , , , , , , , , , , , , , , );


--send_ack is send_ack at PIN_P26
send_ack = OUTPUT();


--A1L7 is clk~input at IOIBUF_X0_Y36_N15
A1L7 = INPUT_BUFFER(.I(clk), );


--clk is clk at PIN_Y2
clk = INPUT();


--A1L12 is rst_n~input at IOIBUF_X115_Y40_N8
A1L12 = INPUT_BUFFER(.I(rst_n), );


--rst_n is rst_n at PIN_M23
rst_n = INPUT();


--A1L2 is RX~input at IOIBUF_X27_Y73_N8
A1L2 = INPUT_BUFFER(.I(RX), );


--RX is RX at PIN_G12
RX = INPUT();












--A1L8 is clk~inputclkctrl at CLKCTRL_G4
A1L8 = cycloneive_clkctrl(.INCLK[0] = A1L7) WITH (clock_type = "Global Clock", ena_register_mode = "none");


--F1L88 is uart_rx:rx|datapath1:dp|recv_req~feeder at LCCOMB_X112_Y41_N28
F1L88 = E1L6;


--F1L72 is uart_rx:rx|datapath1:dp|d_out[0]~feeder at LCCOMB_X114_Y41_N28
F1L72 = F1_B[1];


--F1L74 is uart_rx:rx|datapath1:dp|d_out[1]~feeder at LCCOMB_X114_Y41_N16
F1L74 = F1_B[2];


--F1L5 is uart_rx:rx|datapath1:dp|B[1]~feeder at LCCOMB_X110_Y41_N0
F1L5 = F1_B[2];


--F1L7 is uart_rx:rx|datapath1:dp|B[2]~feeder at LCCOMB_X110_Y41_N2
F1L7 = F1_B[3];


--F1L76 is uart_rx:rx|datapath1:dp|d_out[2]~feeder at LCCOMB_X114_Y41_N30
F1L76 = F1_B[3];


--F1L78 is uart_rx:rx|datapath1:dp|d_out[3]~feeder at LCCOMB_X114_Y41_N8
F1L78 = F1_B[4];


--F1L10 is uart_rx:rx|datapath1:dp|B[4]~feeder at LCCOMB_X111_Y41_N14
F1L10 = F1_B[5];


--F1L80 is uart_rx:rx|datapath1:dp|d_out[4]~feeder at LCCOMB_X114_Y41_N10
F1L80 = F1_B[5];


--F1L12 is uart_rx:rx|datapath1:dp|B[5]~feeder at LCCOMB_X111_Y41_N22
F1L12 = F1_B[6];


--F1L82 is uart_rx:rx|datapath1:dp|d_out[5]~feeder at LCCOMB_X114_Y41_N4
F1L82 = F1_B[6];


--F1L14 is uart_rx:rx|datapath1:dp|B[6]~feeder at LCCOMB_X111_Y41_N0
F1L14 = F1_B[7];


--F1L84 is uart_rx:rx|datapath1:dp|d_out[6]~feeder at LCCOMB_X114_Y41_N22
F1L84 = F1_B[7];


--F1L16 is uart_rx:rx|datapath1:dp|B[7]~feeder at LCCOMB_X111_Y41_N20
F1L16 = F1_B[8];


--F1L86 is uart_rx:rx|datapath1:dp|d_out[7]~feeder at LCCOMB_X114_Y41_N20
F1L86 = F1_B[8];


--F1L18 is uart_rx:rx|datapath1:dp|B[8]~feeder at LCCOMB_X111_Y41_N24
F1L18 = F1_B[9];


--F1L20 is uart_rx:rx|datapath1:dp|B[9]~feeder at LCCOMB_X111_Y41_N12
F1L20 = A1L2;


